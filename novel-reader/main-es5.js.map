{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/novel/novel.component.ts","webpack:///src/app/novel/novel.component.html","webpack:///src/app/services/core.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HomeComponent","core","get","subscribe","data","novelsList","console","log","NovelComponent","router","chapter","nxt","prev","darkMode","params","chaptersList","currIdx","indexOf","length","responseType","chapterContent","serializeContent","txt","replace","CoreService","http","baseUrl","endpoint","options","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { NovelComponent } from './novel/novel.component';\n\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'novel/:title/:chapter', component: NovelComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'novel-reader';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeComponent } from './home/home.component';\nimport { NovelComponent } from './novel/novel.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NovelComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CoreService } from '../services/core.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  public novelsList: any;\n\n  constructor(public core: CoreService) { }\n\n  ngOnInit(): void {\n    this.core.get('novels').subscribe(data => {\n      this.novelsList = data;\n      console.log(this.novelsList)\n    });\n  }\n\n  selectNovel(title){\n    \n  }\n\n}\n","<h1>Novels</h1>\n<div class=\"container\">\n    <div class=\"novel-card\" *ngFor=\"let nov of novelsList\" [routerLink]=\"['/novel', nov, 'chapter-0']\">\n        {{nov}}\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CoreService } from '../services/core.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-novel',\n  templateUrl: './novel.component.html',\n  styleUrls: ['./novel.component.scss']\n})\nexport class NovelComponent implements OnInit {\n  public chaptersList: any;\n  public title = '';\n  public chapter = '';\n  public chapterContent: any;\n  public nxt = '';\n  public prev = '';\n  public darkMode = false;\n\n  constructor(public core: CoreService, public router: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.router.params.subscribe(params => {\n      this.title = params['title'];\n      this.chapter = params['chapter'];\n      this.core.get(`${this.title}/chapters`).subscribe(data => {\n        this.chaptersList = data;\n\n        let currIdx = this.chaptersList.indexOf(this.chapter);\n      \n        this.prev = currIdx > 0 ? this.chaptersList[currIdx - 1] : this.chapter;\n        this.nxt = currIdx < this.chaptersList.length - 1 ? this.chaptersList[currIdx + 1] : this.chapter;\n      });\n      this.core.get(`${this.title}/chapters/${this.chapter}`, {responseType: 'text'}).subscribe(data => {\n        this.chapterContent = this.serializeContent(data);\n      });\n      \n    })\n  }\n\n  serializeContent(txt){\n    return txt.replace(/\\n/g, '<br><br>') + '<br><br><br><br><br>'\n  }\n\n}\n","<div class=\"container\" [class.dark-mode]=\"darkMode\">\n    <div class=\"chapters\">\n        <div class=\"chapter\" *ngFor=\"let c of chaptersList\" [routerLink]=\"['/novel', title, c]\" [class.selected]=\"c === chapter\" [class.color-white]=\"darkMode\">\n            {{c}}\n        </div>\n    </div>\n    <div class=\"content\" [innerHTML]=\"chapterContent\">\n    </div>\n</div>\n<div class=\"actions\">\n    <button [routerLink]=\"['/novel', title, prev]\">prev chapter</button>\n    <button [routerLink]=\"['/novel', title, nxt]\">next chapter</button>\n    <button (click)=\"darkMode = !darkMode\">{{darkMode ? 'dark mode' : 'light mode'}}</button>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoreService {\n\n  private baseUrl = 'http://localhost:3000/';\n\n  constructor(public http: HttpClient) { }\n\n  get(endpoint, options?){\n    if(options){\n      return this.http.get(this.baseUrl + endpoint, options);\n    }\n\n    return this.http.get(this.baseUrl + endpoint);\n    \n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}